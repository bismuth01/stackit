services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: stackit_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_admin_password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
      - ./database/scripts:/scripts
    networks:
      - stackit_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c log_statement=all
      -c log_destination=stderr
      -c log_min_duration_statement=0
      -c shared_preload_libraries=''
      -c max_connections=200

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: stackit_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - stackit_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server /usr/local/etc/redis/redis.conf

  # Database Setup Service (runs once to initialize)
  db_setup:
    image: postgres:15-alpine
    container_name: stackit_db_setup
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: postgres_admin_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./database/scripts:/scripts
      - ./docker/postgres/setup:/setup
    networks:
      - stackit_network
    entrypoint: /setup/run-setup.sh
    restart: "no"

  # PgAdmin for Database Management (Development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: stackit_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/postgres/pgadmin-servers.json:/pgadmin4/servers.json
    networks:
      - stackit_network
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - dev
      - development

  # Redis Commander for Redis Management (Development only)
  redis_commander:
    image: rediscommander/redis-commander:latest
    container_name: stackit_redis_commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: "local:redis:6379"
      HTTP_USER: admin
      HTTP_PASSWORD: admin123
    ports:
      - "8081:8081"
    networks:
      - stackit_network
    depends_on:
      redis:
        condition: service_healthy
    profiles:
      - dev
      - development

volumes:
  postgres_data:
    driver: local
    name: stackit_postgres_data
  redis_data:
    driver: local
    name: stackit_redis_data
  pgadmin_data:
    driver: local
    name: stackit_pgadmin_data

networks:
  stackit_network:
    driver: bridge
    name: stackit_network
