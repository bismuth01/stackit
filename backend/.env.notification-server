# StackIt Notification Server Environment Configuration
# Copy this file to your notification server project as .env

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Connection (IMPORTANT: Use stackit_content database for notifications)
DB_HOST=localhost
DB_PORT=5432
DB_USER=stackit_user
DB_PASSWORD=stackit_password
CONTENT_DB_NAME=stackit_content
USER_DB_NAME=stackit_users

# Database Connection Pool
DB_POOL_MIN=2
DB_POOL_MAX=10
DB_CONNECTION_TIMEOUT=5000

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis Connection
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# Redis Database Assignments for Notifications
REDIS_NOTIFICATION_DB=2
REDIS_SESSION_DB=0
REDIS_CACHE_DB=1

# Redis Connection Settings
REDIS_CONNECT_TIMEOUT=5000
REDIS_RETRY_ATTEMPTS=3

# =============================================================================
# NOTIFICATION SERVER CONFIGURATION
# =============================================================================

# Server Settings
NODE_ENV=development
PORT=3003
HOST=0.0.0.0

# Notification Settings
NOTIFICATION_BATCH_SIZE=50
NOTIFICATION_MAX_RETRIES=3
NOTIFICATION_RETRY_DELAY=1000

# Real-time Updates
ENABLE_REALTIME=true
WEBSOCKET_PORT=3004

# =============================================================================
# NOTIFICATION TYPES (enable/disable globally)
# =============================================================================

ENABLE_ANSWER_NOTIFICATIONS=true
ENABLE_COMMENT_NOTIFICATIONS=true
ENABLE_MENTION_NOTIFICATIONS=true
ENABLE_VOTE_NOTIFICATIONS=true

# =============================================================================
# PERFORMANCE & CACHING
# =============================================================================

# Cache TTL (in seconds)
UNREAD_COUNT_CACHE_TTL=300
USER_PREFERENCES_CACHE_TTL=1800
NOTIFICATION_LIST_CACHE_TTL=600

# Rate Limiting
RATE_LIMIT_WINDOW=60000
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# LOGGING
# =============================================================================

LOG_LEVEL=info
LOG_FORMAT=json
ENABLE_SQL_LOGGING=false

# =============================================================================
# SECURITY
# =============================================================================

# JWT Configuration (for authentication)
JWT_SECRET=your-jwt-secret-key-here
JWT_EXPIRES_IN=24h

# CORS Settings
CORS_ORIGIN=http://localhost:3000,http://localhost:5173
CORS_CREDENTIALS=true

# =============================================================================
# DOCKER CONFIGURATION (when using Docker)
# =============================================================================

# Uncomment these when running notification server in Docker
# DB_HOST=postgres
# REDIS_HOST=redis

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Development Features
DEV_MOCK_NOTIFICATIONS=false
DEV_AUTO_SEED=false
DEV_ENABLE_DEBUG=true

# =============================================================================
# MONITORING & HEALTH
# =============================================================================

# Health Check
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30000

# Metrics
ENABLE_METRICS=false
METRICS_PORT=9090

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# For Docker Development:
# DB_HOST=postgres
# REDIS_HOST=redis

# For Production:
# NODE_ENV=production
# DB_HOST=your-production-db-host
# REDIS_HOST=your-production-redis-host
# JWT_SECRET=your-very-secure-production-jwt-secret
# LOG_LEVEL=warn
# ENABLE_SQL_LOGGING=false

# For Testing:
# NODE_ENV=test
# DB_HOST=localhost
# REDIS_HOST=localhost
# LOG_LEVEL=error
